#SPDX-License-Identifier: MIT-0
---
# tasks file for proxmox_create_container
# - name: install proxmoxer and requests on the host
#   shell:
#     cmd: pip3 install -U proxmoxer requests
- name: Load service config
  set_fact:
    service_conf: "{{ lookup('vars', service) }}"

- name: Install pip3 and proxmoxer
  apt:
    name:
      - python3-pip
      - python3-proxmoxer
      - python3-requests
    state: present

- name: "Create LXC container {{ service }}"
  community.general.proxmox:
    api_user: root@pam
    api_password: "{{ service_conf.host_api_passwd }}"
    api_host: localhost
    vmid: "{{ service_conf.container_id }}"
    password: "{{ service_conf.container_passwd }}"
    node: "{{ service_conf.host_nodename }}"
    hostname: "{{ service_conf.container_name }}"
    ostemplate: "{{ service_conf.container_template }}"
    searchdomain: "{{ service_conf.container_search_domain }}"
    memory: "{{ service_conf.container_memory }}"
    cores: "{{ service_conf.container_cores }}"
    pubkey: "{{ service_conf.container_pubkey }}"
    description: "{{ service }} created with ansible"
    disk_volume:
      storage: "{{ service_conf.container_rootfs_storage }}"
      size: "{{ service_conf.container_rootfs_storage_size }}"
    mount_volumes:
      - id: mp0
        storage: "{{ service_conf.container_mount_storage }}"
        size: "{{ service_conf.container_mount_storage_size }}"
        mountpoint: "{{ service_conf.container_mount_point }}"
    netif:
      net0: "name=eth0,bridge=vmbr0,ip=dhcp,firewall=1"
    state: present
    features:
      - nesting=1
      # - mount=cifs,nfs
    validate_certs: false

- name: "Start LXC container {{ service }}"
  community.general.proxmox:
    api_user: root@pam
    api_password: "{{ service_conf.host_api_passwd }}"
    api_host: localhost
    node: "{{ service_conf.host_nodename }}"
    vmid: "{{ service_conf.container_id }}"
    state: started
    validate_certs: false
- name: "Pause"
  ansible.builtin.pause:
    seconds: 2
    
- name: "Get LXC container IP {{ service }}"
  shell:
    cmd: pct exec {{ service_conf.container_id }} -- bash -c "ip -4 addr show eth0"
  register: lxc_ip_result
  changed_when: false

- name: "Prepare LXC container {{ service }}"
  shell:
    cmd: pct exec {{ service_conf.container_id }} -- bash -c "apt update && apt install -y openssh-server"

- name: "Enable SSH in container {{ service }}"
  shell:
    cmd: pct exec {{ service_conf.container_id }} -- bash -c "systemctl enable --now ssh"

- name: "Set IP fact {{ service }}"
  set_fact:
    lxc_ip: "{{ lxc_ip_result.stdout | regex_search('inet (\\d+\\.\\d+\\.\\d+\\.\\d+)/\\d+', '\\1') }}"

- name: "Add container {{ service }} to inventory"
  add_host:
    hostname: "{{ service_conf.container_name }}.{{ service_conf.container_search_domain }}"
    groups: "{{ service_conf.container_name }}"
    ansible_host: "{{ lxc_ip[0] }}"
    ansible_user: root
